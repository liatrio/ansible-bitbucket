---
- hosts: bitbucket
  roles:
    - role: liatrio.mount_persist_data
      become: yes
    - role: geerlingguy.git
      become: yes
    - role: ansible-role-postgres
      become: yes
      #override os variables
      ansible_distribution: 'RedHat'
      ansible_distribution_major_version: 6
      postgresql_bin_directory: '/usr/bin'
      postgresql_service_name: 'postgresql96'
      #postgresql_conf_directory: '/var/lib/pgsql96/data'
      #postgresql_varlib_directory_name: 'pgsql96'
      #postgresql_data_directory: '/var/lib/{{ postgresql_varlib_directory_name }}/data'
      # Location of postgres configuration files here
      postgresql_conf_directory: "/data/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
      # HBA (Host Based Authentication) file
      postgresql_hba_file: "{{ postgresql_conf_directory }}/pg_hba.conf"
      # Ident configuration file
      postgresql_ident_file: "{{ postgresql_conf_directory }}/pg_ident.conf"
      # Use data in another directory
      postgresql_varlib_directory_name: "postgresql"
      postgresql_data_directory: "/data/{{ postgresql_varlib_directory_name }}/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
      postgresql_pid_directory: "/var/run/postgresql"
      # If external_pid_file is not explicitly set, on extra PID file is written
      postgresql_external_pid_file: "{{ postgresql_pid_directory }}/{{ postgresql_version }}-{{ postgresql_cluster_name }}.pid"
      
      # Basic settings
      postgresql_version: 9.6
      postgresql_encoding: 'UTF-8'
      postgresql_locale: 'en_US.UTF-8'
      postgresql_ctype: 'en_US.UTF-8'

      postgresql_admin_user: "postgres"
      postgresql_default_auth_method: "md5"

      #disable this because it does it wrong
      postgresql_service_enabled: false # should the service be enabled, default is true

      postgresql_cluster_name: "main"
      postgresql_cluster_reset: false

      # List of databases to be created (optional)
      # Note: for more flexibility with extensions use the postgresql_database_extensions setting.
      postgresql_databases:
        - name: "{{ postgresql_bitbucket_database }}"
          #owner: baz          # optional; specify the owner of the database
          hstore: yes         # flag to install the hstore extension on this database (yes/no)
          uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
          citext: yes         # flag to install the citext extension on this database (yes/no)
          encoding: 'UTF-8'   # override global {{ postgresql_encoding }} variable per database
          #lc_collate: 'en_GB.UTF-8'   # override global {{ postgresql_locale }} variable per database
          #lc_ctype: 'en_GB.UTF-8'     # override global {{ postgresql_ctype }} variable per database

      # List of users to be created (optional)
      postgresql_users:
        - name: "{{ postgresql_bitbucket_user }}"
          pass: "{{ postgresql_bitbucket_password }}"
          encrypted: no       # denotes if the password is already encrypted.
      postgresql_pg_hba_default:
        - { type: local, database: all, user: "{{ postgresql_admin_user }}", address: "", method: "trust", comment: "" }
        - { type: local, database: all, user: all, address: "",             method: "{{ postgresql_default_auth_method }}", comment: '"local" is for Unix domain socket connections only' }
        - { type: host,  database: all, user: all, address: "127.0.0.1/32", method: "{{ postgresql_default_auth_method }}", comment: "IPv4 local connections:" }
        - { type: host,  database: all, user: all, address: "::1/128",      method: "{{ postgresql_default_auth_method }}", comment: "IPv6 local connections:" }
    - role: geerlingguy.elasticsearch
      elasticsearch_http_port: 7992
      become: yes
    - role: geerlingguy.nginx
      become: yes
      ansible_distribution_major_version: 6
      nginx_vhosts:
        - listen: "80"
          server_name: "bitbucket.fastfeedback.rocks.conf"
          state: "present"
          template: "{{ nginx_vhost_template }}"
          filename: "bitbucket.fastfeedback.rocks.conf"
          extra_parameters: |
            location / {
                proxy_set_header Host $host:$server_port;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_pass http://127.0.0.1:7990;
            }
      
